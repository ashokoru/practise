<testsuite failures="2" name="resources/TwoWAyCommands.feature" skipped="0" tests="15" time="632.068839">
  <testcase classname="resources.TwoWAyCommands" name="Update Set Point" time="50.269013">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Perform Pre Trip" time="44.119762">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Cycle Sentry Mode" time="45.02547">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Continuous Mode" time="43.647055">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Defrost" time="43.609787">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Clear Alarms" time="45.152172">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="View Optiset Profile" time="41.935359">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Activate Optiset Profile" time="2.419392">
    <failure message="TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {&quot;path&quot;:&quot;/connected-solutions/activateOptisetProfile/&quot;,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;message&quot;:&quot;Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F&quot;,&quot;timestamp&quot;:&quot;2021-09-27T10:34:02.986+0000&quot;,&quot;status&quot;:500}">* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Configure Door Alarm" time="44.43962">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Configure Temperature Range Settings" time="42.814895">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="View Door Alarm" time="42.460072">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewDoorAlarm/' ........................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response == [{"doorAlarmDwellingMins1": 30,"doorAlarmDwellingMins2": 0,"doorAlarmDwellingMins3": 0,"vehicleName": '#(vehicleId)',"customerName": '#(customerId)',"status": true}] . passed
* def resu = call result 40000 ............................................ passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="View Temperature Range Settings" time="1.359807">
    <failure message="TwoWAyCommands.feature:270 - path: $[0].lowTemperatureZone1, actual: null, expected: -30, reason: actual value is null">* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewDoorAlarm/' ........................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response == [{"doorAlarmDwellingMins1": 30,"doorAlarmDwellingMins2": 0,"doorAlarmDwellingMins3": 0,"vehicleName": '#(vehicleId)',"customerName": '#(customerId)',"status": true}] . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewTemperatureRangeSettings/' ............ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].lowTemperatureZone1 == -30 .......................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:270 - path: $[0].lowTemperatureZone1, actual: null, expected: -30, reason: actual value is null&#13;
	at ✽.And match response[0].lowTemperatureZone1 == -30 (TwoWAyCommands.feature:270)&#13;

And match response[0].highTemperatureZone1 == 30 .......................... skipped
And match response[0].rangeRelativeZone1 == 1 ............................. skipped
And match response[0].outOfRangeTimeZone1 == 10 ........................... skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].status == true ...................................... skipped
* def resu = call result 40000 ............................................ skipped</failure>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Remote Off" time="83.59488">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewDoorAlarm/' ........................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response == [{"doorAlarmDwellingMins1": 30,"doorAlarmDwellingMins2": 0,"doorAlarmDwellingMins3": 0,"vehicleName": '#(vehicleId)',"customerName": '#(customerId)',"status": true}] . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewTemperatureRangeSettings/' ............ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].lowTemperatureZone1 == -30 .......................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:270 - path: $[0].lowTemperatureZone1, actual: null, expected: -30, reason: actual value is null&#13;
	at ✽.And match response[0].lowTemperatureZone1 == -30 (TwoWAyCommands.feature:270)&#13;

And match response[0].highTemperatureZone1 == 30 .......................... skipped
And match response[0].rangeRelativeZone1 == 1 ............................. skipped
And match response[0].outOfRangeTimeZone1 == 10 ........................... skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].status == true ...................................... skipped
* def resu = call result 40000 ............................................ skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/remoteOff/' ............................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def resu = call result 40000 ............................................ passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Remote On" time="43.890108">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewDoorAlarm/' ........................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response == [{"doorAlarmDwellingMins1": 30,"doorAlarmDwellingMins2": 0,"doorAlarmDwellingMins3": 0,"vehicleName": '#(vehicleId)',"customerName": '#(customerId)',"status": true}] . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewTemperatureRangeSettings/' ............ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].lowTemperatureZone1 == -30 .......................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:270 - path: $[0].lowTemperatureZone1, actual: null, expected: -30, reason: actual value is null&#13;
	at ✽.And match response[0].lowTemperatureZone1 == -30 (TwoWAyCommands.feature:270)&#13;

And match response[0].highTemperatureZone1 == 30 .......................... skipped
And match response[0].rangeRelativeZone1 == 1 ............................. skipped
And match response[0].outOfRangeTimeZone1 == 10 ........................... skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].status == true ...................................... skipped
* def resu = call result 40000 ............................................ skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/remoteOff/' ............................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/remoteOn/' ................................ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.TwoWAyCommands" name="Get Temperature Data for vehicles" time="57.331448">
    <system-out>* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/updateSetPoint/' .......................... passed
And param zone = '1' ...................................................... passed
And param setpoint = '2' .................................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
And print authToken ....................................................... passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/performPreTrip/' .......................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterCycleSentryMode/' .................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/enterContinuousMode/' ..................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/defrost/' ................................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And param zone = '1' ...................................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/clearAlarms/' ............................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewOptisetProfile/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#	null' ....................... passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/activateOptisetProfile/' .................. passed
And header X-OAUTH2-Token = authToken ..................................... passed
And params {"profileId": "625295551","setpoint": "-23","languageId": "1"} . passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:204 - status code was: 500, expected: 200, response time: 2380, url: https://rest.tracking.thermoking.com/connected-solutions/activateOptisetProfile/?vehicles=Bluebox+India+2+PROD&amp;profileId=625295551&amp;setpoint=-23&amp;languageId=1, response: {"path":"/connected-solutions/activateOptisetProfile/","error":"Internal Server Error","message":"Profile not on controller. 47218C5F-6B13-430F-9022-0028A1559D1F","timestamp":"2021-09-27T10:34:02.986+0000","status":500}&#13;
	at ✽.Then status 200 (TwoWAyCommands.feature:204)&#13;

And print response ........................................................ skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].requestIdentifier == '#notnull' ..................... skipped
* def requestAPIName = response[0].requestIdentifier ...................... skipped
Then print requestAPIName ................................................. skipped
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureDoorAlarm/' ...................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId":"1","dwellTime":"30"}] ............................... passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/configureTemperatureRangeSettings/' ....... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= [{"zoneId": "1","highTemperature": "30","lowTemperature": "-30","rangeRelativeTo": "1","outOfRange": "10"}] . passed
And request body .......................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewDoorAlarm/' ........................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response == [{"doorAlarmDwellingMins1": 30,"doorAlarmDwellingMins2": 0,"doorAlarmDwellingMins3": 0,"vehicleName": '#(vehicleId)',"customerName": '#(customerId)',"status": true}] . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/viewTemperatureRangeSettings/' ............ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].lowTemperatureZone1 == -30 .......................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: TwoWAyCommands.feature:270 - path: $[0].lowTemperatureZone1, actual: null, expected: -30, reason: actual value is null&#13;
	at ✽.And match response[0].lowTemperatureZone1 == -30 (TwoWAyCommands.feature:270)&#13;

And match response[0].highTemperatureZone1 == 30 .......................... skipped
And match response[0].rangeRelativeZone1 == 1 ............................. skipped
And match response[0].outOfRangeTimeZone1 == 10 ........................... skipped
And match response[0].customerId == customerId ............................ skipped
And match response[0].vehicleId == vehicleId .............................. skipped
And match response[0].status == true ...................................... skipped
* def resu = call result 40000 ............................................ skipped
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/remoteOff/' ............................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def resu = call result 40000 ............................................ passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
Given path 'connected-solutions/remoteOn/' ................................ passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
And request requestBody ................................................... passed
When method post .......................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].customerId == customerId ............................ passed
And match response[0].vehicleId == vehicleId .............................. passed
And match response[0].requestIdentifier == '#notnull' ..................... passed
* def requestAPIName = response[0].requestIdentifier ...................... passed
Then print requestAPIName ................................................. passed
* def myrequestID = call read('GetRequestStatus.feature@requestStatus') {requestAPIName : '#(requestAPIName)', authToken : '#(authToken)', customerId : '#(customerId)', vehicleId : '#(vehicleId)'} . passed
* def propertiesData = .................................................... passed
* def data = propertiesData() ............................................. passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {X-External-ID: '#(customerId)'} .................... passed
* def requestBody = {"userName": '#(userName)',"password": '#(password)'} . passed
* params {vehicles: '#(vehicleId)'} ....................................... passed
* def obtainToken = callonce read('TokenTwoWay.feature') {APIurl : '#(APIurl)', userName : '#(userName)', password : '#(password)', customerId : '#(customerId)'} . passed
* def authToken = obtainToken.response.accessToken ........................ passed
Then print authToken ...................................................... passed
* def result = ............................................................ passed
* def getDate = ........................................................... passed
* def currentDate = getDate() ............................................. passed
* def startTime = currentDate + ' 00:00:00' ............................... passed
* def endTime = currentDate + ' 10:05:00' ................................. passed
* def pathId = 'connected-solutions/getTemperatureDataForVehicles/' + startTime + '/' + endTime + '/' . passed
Given path pathId ......................................................... passed
And header X-OAUTH2-Token = authToken ..................................... passed
And body= {"userName": '#(userName)',"password": '#(password)'} ........... passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response[0].vehicleName == '#notnull' ........................... passed
* def resu = call result 40000 ............................................ passed</system-out>
  </testcase>
</testsuite>
