<testsuite failures="4" name="resources/Soap.feature" skipped="0" tests="15" time="345.658015">
  <testcase classname="resources.Soap" name="Update Set Point zone 1" time="39.381186">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Clear All Alarms" time="37.907737">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Perform Pre Trip" time="37.471995">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Defrost&#9;1" time="38.627398">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="ContinuousMode Mode" time="37.642742">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="CycleSentryMode Mode" time="37.504447">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Configure Temperature Settings" time="34.443788">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="View Temperature Settings" time="1.206775">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="View Optiset Profile" time="1.112948">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Activate Optiset Profile" time="1.247424">
    <failure message="Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1=&quot;http://service.jbossws.webservices.celtrak.com/&quot;/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;">* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Configure Door Alarm" time="1.279342">
    <failure message="Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1=&quot;http://service.jbossws.webservices.celtrak.com/&quot;/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;">* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:378)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="View Door Alarm" time="1.080004">
    <failure message="Soap.feature:407 - path: /Envelope/Body/viewDoorAlarmResponse/requestReference/status, actual: 'false', expected: 'true', reason: not equal">* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:378)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:407 - path: /Envelope/Body/viewDoorAlarmResponse/requestReference/status, actual: 'false', expected: 'true', reason: not equal&#13;
	at ✽.And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' (Soap.feature:407)</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Remote Off" time="37.652999">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:378)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:407 - path: /Envelope/Body/viewDoorAlarmResponse/requestReference/status, actual: 'false', expected: 'true', reason: not equal&#13;
	at ✽.And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' (Soap.feature:407)&#13;

* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
  <testcase classname="resources.Soap" name="Get Temperature Data" time="1.208603">
    <failure message="Soap.feature:471 - status code was: 405, expected: 200, response time: 1106, url: https://soap.tracking.thermoking.com/tk-webservices/Command/Data, response: &lt;html&gt;&#13;&#10;&lt;head&gt;&#13;&#10;&lt;META http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&#13;&#10;&lt;title&gt;Error&lt;/title&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body&gt;HTTP method POST is not supported by this URL&lt;/body&gt;&#13;&#10;&lt;/html&gt;&#13;&#10;">* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:378)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:407 - path: /Envelope/Body/viewDoorAlarmResponse/requestReference/status, actual: 'false', expected: 'true', reason: not equal&#13;
	at ✽.And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' (Soap.feature:407)&#13;

* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
* def getDate = ........................................................... passed
* def currentDate = getDate() ............................................. passed
* def startTime = currentDate + 'T00:00:00' ............................... passed
* def endTime = currentDate + 'T10:05:00' ................................. passed
Given path 'Data' ......................................................... passed
And request ............................................................... passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:471 - status code was: 405, expected: 200, response time: 1106, url: https://soap.tracking.thermoking.com/tk-webservices/Command/Data, response: &lt;html&gt;&#13;
&lt;head&gt;&#13;
&lt;META http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&#13;
&lt;title&gt;Error&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;HTTP method POST is not supported by this URL&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
&#13;
	at ✽.Then status 200 (Soap.feature:471)&#13;

And print response ........................................................ skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Remote On" time="37.890626">
    <system-out>* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:346 - status code was: 500, expected: 200, response time: 1219, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;class com.celtrak.webservices.jbossws.service.exceptions.ProfileNotOnControllerException nor any of its super class is known to this context.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:346)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:378 - status code was: 500, expected: 200, response time: 1257, url: https://soap.tracking.thermoking.com/tk-webservices/Command, response: &lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"/&gt;&lt;soap:Body&gt;&lt;soap:Fault&gt;&lt;faultcode&gt;soap:Server&lt;/faultcode&gt;&lt;faultstring&gt;Fault occurred while processing.&lt;/faultstring&gt;&lt;detail&gt;&lt;ns1:Exception xmlns:ns1="http://service.jbossws.webservices.celtrak.com/"/&gt;&lt;/detail&gt;&lt;/soap:Fault&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;&#13;
	at ✽.Then status 200 (Soap.feature:378)&#13;

And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:407 - path: /Envelope/Body/viewDoorAlarmResponse/requestReference/status, actual: 'false', expected: 'true', reason: not equal&#13;
	at ✽.And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' (Soap.feature:407)&#13;

* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
* def getDate = ........................................................... passed
* def currentDate = getDate() ............................................. passed
* def startTime = currentDate + 'T00:00:00' ............................... passed
* def endTime = currentDate + 'T10:05:00' ................................. passed
Given path 'Data' ......................................................... passed
And request ............................................................... passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... failed

Stack Trace:
com.intuit.karate.exception.KarateException: Soap.feature:471 - status code was: 405, expected: 200, response time: 1106, url: https://soap.tracking.thermoking.com/tk-webservices/Command/Data, response: &lt;html&gt;&#13;
&lt;head&gt;&#13;
&lt;META http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;&#13;
&lt;title&gt;Error&lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;HTTP method POST is not supported by this URL&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
&#13;
	at ✽.Then status 200 (Soap.feature:471)&#13;

And print response ........................................................ skipped
* def data = call read('PropFiles.js') .................................... passed
* url data[0] ............................................................. passed
* configure ssl = true .................................................... passed
* configure cookies = null ................................................ passed
* def APIurl = data[0] .................................................... passed
* def userName = data[1] .................................................. passed
* def password = data[2] .................................................. passed
* def customerId = data[3] ................................................ passed
* def vehicleId = data[4] ................................................. passed
* configure headers = {Content-Type: 'application/xml'} ................... passed
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . passed
* path 'Command' .......................................................... passed
* def result = ............................................................ passed
Given request ............................................................. passed
When soap action '' ....................................................... passed
Then status 200 ........................................................... passed
And print response ........................................................ passed
And match response /Envelope/Body/remoteOnResponse/requestReference/customerId == customerId . passed
* def requestIdentifier = /Envelope/Body/remoteOnResponse/requestReference/requestIdentifier . passed
Then print requestIdentifier .............................................. passed
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . passed</system-out>
  </testcase>
</testsuite>
