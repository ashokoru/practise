<testsuite failures="15" name="resources/Soap.feature" skipped="0" tests="15" time="0.083618">
  <testcase classname="resources.Soap" name="Update Set Point zone 1" time="0.053184">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Clear All Alarms" time="0.002323">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Perform Pre Trip" time="0.002187">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Defrost&#9;1" time="0.00199">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="ContinuousMode Mode" time="0.003426">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="CycleSentryMode Mode" time="0.001966">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Configure Temperature Settings" time="0.002339">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="View Temperature Settings" time="0.002937">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="View Optiset Profile" time="0.001889">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Activate Optiset Profile" time="0.002332">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Configure Door Alarm" time="0.001636">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="View Door Alarm" time="0.001654">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Remote Off" time="0.001724">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Get Temperature Data" time="0.001825">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
* def getDate = ........................................................... skipped
* def currentDate = getDate() ............................................. skipped
* def startTime = currentDate + 'T00:00:00' ............................... skipped
* def endTime = currentDate + 'T10:05:00' ................................. skipped
Given path 'Data' ......................................................... skipped
And request ............................................................... skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped</failure>
  </testcase>
  <testcase classname="resources.Soap" name="Remote On" time="0.002206">
    <failure message="-unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;&#10;&#9;var test = testName.test;&#13;&#10;    var FileInputStream = Java.type('java.io.FileInputStream');&#13;&#10;    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;&#10;    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;&#10;    var prop = new java.util.Properties();&#13;&#10;    var load = prop.load(fis);&#13;&#10;    var propData = [];&#13;&#10;    if(test==='soapTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('soapUrl');&#13;&#10;    &#9;propData[1] = prop.get('soapUserName');&#13;&#10;    &#9;propData[2] = prop.get('soapPassword');&#13;&#10;    &#9;propData[3] = prop.get('soapCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('soapVehicleId');&#13;&#10;    }&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;    &#9;propData[0] = prop.get('restUrl');&#13;&#10;    &#9;propData[1] = prop.get('restUserName');&#13;&#10;    &#9;propData[2] = prop.get('restPassword');&#13;&#10;    &#9;propData[3] = prop.get('restCustomerId');&#13;&#10;    &#9;propData[4] = prop.get('restVehicleId');&#13;&#10;    }&#13;&#10;    &#13;&#10;    return propData;&#13;&#10;  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;&#10;    elif(test==='restTwoWay'){&#13;&#10;                             ^ in &lt;eval&gt; at line number 16 at column number 29">* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/updateSetPointResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/updateSetPointResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/clearAlarmsResponse/requestReferences/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/clearAlarmsResponse/requestReferences/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/performPreTripResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/performPreTripResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/defrostResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/defrostResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterContinuousModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterContinuousModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/enterCycleSentryModeResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/enterCycleSentryModeResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureTemperatureRangeSettingsResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewTemperatureRangeSettingsResponse/TemperatureRangeSettings/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewOptisetProfileResponse/OptisetProfile/customerId == customerId . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/activateOptisetProfileResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/activateOptisetProfileResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/configureDoorAlarmResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/configureDoorAlarmResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/viewDoorAlarmResponse/requestReference/status == 'true' . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/remoteOffResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/remoteOffResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
* def getDate = ........................................................... skipped
* def currentDate = getDate() ............................................. skipped
* def startTime = currentDate + 'T00:00:00' ............................... skipped
* def endTime = currentDate + 'T10:05:00' ................................. skipped
Given path 'Data' ......................................................... skipped
And request ............................................................... skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
* def data = call read('PropFiles.js') { test: 'restTwoWay' } ............. failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:7 - javascript evaluation failed: read('PropFiles.js'), javascript evaluation failed: function(testName) {&#13;
	var test = testName.test;&#13;
    var FileInputStream = Java.type('java.io.FileInputStream');&#13;
    var currentDirectory = java.lang.System.getProperty('user.dir');&#13;
    var fis = new FileInputStream(currentDirectory +  '\\src\\main\\java\\resources\\global.properties');&#13;
    var prop = new java.util.Properties();&#13;
    var load = prop.load(fis);&#13;
    var propData = [];&#13;
    if(test==='soapTwoWay'){&#13;
    	propData[0] = prop.get('soapUrl');&#13;
    	propData[1] = prop.get('soapUserName');&#13;
    	propData[2] = prop.get('soapPassword');&#13;
    	propData[3] = prop.get('soapCustomerId');&#13;
    	propData[4] = prop.get('soapVehicleId');&#13;
    }&#13;
    elif(test==='restTwoWay'){&#13;
    	propData[0] = prop.get('restUrl');&#13;
    	propData[1] = prop.get('restUserName');&#13;
    	propData[2] = prop.get('restPassword');&#13;
    	propData[3] = prop.get('restCustomerId');&#13;
    	propData[4] = prop.get('restVehicleId');&#13;
    }&#13;
    &#13;
    return propData;&#13;
  }, &lt;eval&gt;:16:29 Expected ; but found {&#13;
    elif(test==='restTwoWay'){&#13;
                             ^ in &lt;eval&gt; at line number 16 at column number 29&#13;
	at ✽.* def data = call read('PropFiles.js') { test: 'restTwoWay' } (-unknown-:7)&#13;

* url data[0] ............................................................. skipped
* configure ssl = true .................................................... skipped
* configure cookies = null ................................................ skipped
* def APIurl = data[0] .................................................... skipped
* def userName = data[1] .................................................. skipped
* def password = data[2] .................................................. skipped
* def customerId = data[3] ................................................ skipped
* def vehicleId = data[4] ................................................. skipped
* configure headers = {Content-Type: 'application/xml'} ................... skipped
* header Authorization = call read('basic-auth.js') { username: '#(userName)', password: '#(password)' } . skipped
* path 'Command' .......................................................... skipped
* def result = ............................................................ skipped
Given request ............................................................. skipped
When soap action '' ....................................................... skipped
Then status 200 ........................................................... skipped
And print response ........................................................ skipped
And match response /Envelope/Body/remoteOnResponse/requestReference/customerId == customerId . skipped
* def requestIdentifier = /Envelope/Body/remoteOnResponse/requestReference/requestIdentifier . skipped
Then print requestIdentifier .............................................. skipped
* def myrequestID = call read('Soap.feature@requestStatus') {requestIdentifier : '#(requestIdentifier)'} . skipped</failure>
  </testcase>
</testsuite>
